$width: 4em;
$padding: 0.3em;
$height: $width / 2 + $padding;

.reg-h1 {
  text-align: center;
  font-size: 1.7em;
}

.reg-wrap {
  font-family: 'Montserrat', sans-serif;
  margin: 3em 0 0 0;
  display: flex;
  justify-content: space-around;
}

.reg {
  width: 40%;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  flex-wrap: wrap;
  margin-top: 0.5rem;
}

.reg h3 {
  margin: 0.5em;
  text-align: center;
  font-size: 1.3em;
}
.reg span {
  margin: 1em 0 1em 0;
  cursor: default;
}

.reg span i {
  display: inline-block;
  min-width: 3em;
  font-size: 0.7em;
  border: 0.02em solid #38ad2e;
  padding: 0.3em 1em;
}
/* .reg span:hover {
  cursor: pointer;
} */

.reg i {
  font-style: italic;
  color: #38ad2e;
  font-weight: 500;
  margin: 0.5em 0;
}

.reg select {
  min-width: 20rem;
  height: 3rem;
  border: 0.1rem solid #dbdbdb;
  border-radius: 0.3rem;
  margin: 0.2rem;
}
.reg-class-teacher-list:hover {
  cursor: pointer;
}

.click-span:hover {
  cursor: pointer;
}

.reg ol {
  counter-reset: li; /* Инициализируем счетчик */
  padding: 0; /* Удаляем  установленное по умолчанию левое поле*/
  list-style: none; /* Отменяем нумерацию установленную по умолчанию */
}
.reg ol li {
  position: relative; /* Создаем контекст для позиционирования элементов */
  margin: 0 0 6px 2em; /* Даем каждому элементу списка отступ слева, что бы освободить пространство для нумерации */
  padding: 4px 8px;
  border-top: 2px solid #666;
  background: #f6f6f6;
}
.reg ol li:before {
  content: counter(li); /* В качестве данных используем счетчик */
  counter-increment: li; /* Увеличиваем значение счетчика на 1 */
  /* Позиционируем и оформляем цифры */
  position: absolute;
  top: -2px;
  left: -2em;
  width: 2em;
  padding: 4px 0;
  border-top: 2px solid #666;
  color: #fff;
  background: #666;
  font-weight: bold;
  font-family: 'Helvetica Neue', Arial, sans-serif;
  text-align: center;
}

.reg-class-user:hover {
  cursor: pointer;
}

.reg input {
  width: 100%;
  height: 3rem;
  border: 0.1rem solid #dbdbdb;
  border-radius: 0.3rem;
  margin: 0.2rem;
}

.reg button {
  width: 100%;
  display: inline-block;
  font: inherit;
  background: none;
  color: inherit;
  padding: 0;
  cursor: pointer;
  font-size: 1.4rem;
  font-weight: 500;
  line-height: 1.8;
  border: 0.1rem solid #dbdbdb;
  border-radius: 0.3rem;
  padding: 0 2.4rem;
  margin: 0.2rem 0 0 0.15rem;
}
.button-block {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  min-height: 2em;
}
.button-block button {
  display: inline-block;
  max-width: 20em;
  min-height: 3em;
}
.check-wrap {
  display: flex;
  flex-direction: row;
}
.check-wrap p {
  display: block;
  max-width: max-content;
  margin: 0 0 0 0.5em;
}
.check-wrap p:hover {
  font-weight: 500;
  cursor: default;
}
.switch-wrap {
  cursor: pointer;
  background: #2584f1;
  padding: $padding;
  width: $width;
  height: $height;
  border-radius: $height / 2;
  margin-bottom: 0.3em;
  input {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
  }
}
.switch {
  height: 100%;
  display: grid;
  grid-template-columns: 0fr 1fr 1fr;
  transition: 0.2s;
  //ICYMI, pseudo elements are treated as grid items
  &::after {
    content: '';
    border-radius: 50%;
    background: #ccc;
    grid-column: 2;
    transition: background 0.2s;
  }
}
input:checked {
  + .switch {
    grid-template-columns: 1fr 1fr 0fr;
    &::after {
      background-color: #24f358;
    }
  }
}
